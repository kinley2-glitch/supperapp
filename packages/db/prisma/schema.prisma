// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    userID      Int        @id @default(autoincrement())
    name        String
    userName    String     @unique
    phoneNumber Int
    photoID     String
    posts       Post[]
    favourites  Favourite?
    rater       Rating?    @relation("raterStar")
    receiver    Rating?    @relation("receiverStar")
}

model Post {
    postID      Int      @id
    name        String
    description String
    location    String
    condition   String
    status      Status
    owner       User     @relation(fields: [ownerId], references: [userID])
    ownerId     Int      @unique
    category    Category @relation(fields: [categoryId], references: [categoryID])
    categoryId  Int
    type        Type
    images      Image[]
    auction     Auction?
}

model Favourite {
    likeID    Int  @id
    user      User @relation(fields: [userId], references: [userID])
    userId    Int  @unique
    auctionId Int
}

model Image {
    imageID Int    @id
    link    String
    post    Post   @relation(fields: [postId], references: [postID])
    postId  Int
}

model Category {
    categoryID Int    @id
    name       String
    Post       Post[]
}

model Auction {
    auctionID        Int      @id
    startTime        DateTime
    endTime          DateTime
    startPrice       Int
    reservedPrice    Int
    buyoutPrice      Int
    highestBidderId  Int
    highestBidAmount Int
    bidTime          DateTime
    post             Post     @relation(fields: [postId], references: [postID])
    postId           Int      @unique
    Rating           Rating[]
    Chat             Chat[]
}

model Rating {
    ratingID   Int      @id
    rater      User     @relation("raterStar", fields: [raterID], references: [userID])
    raterID    Int      @unique
    receiver   User     @relation("receiverStar", fields: [receiverID], references: [userID])
    receiverID Int      @unique
    rating     Int
    comment    String
    timeStamp  DateTime
    from       From
    auction    Auction  @relation(fields: [auctionId], references: [auctionID])
    auctionId  Int
}

model Chat {
    chatID    Int       @id
    auction   Auction   @relation(fields: [auctionId], references: [auctionID])
    auctionId Int
    Message   Message[]
}

model Message {
    messageID Int      @id
    chat      Chat     @relation(fields: [chatId], references: [chatID])
    chatId    Int
    message   String
    fileLink  String
    from      From
    timeStamp DateTime
}

enum Status {
    UPCOMING
    LIVE
    CLOSED
}

enum Type {
    GOODS
    SERVICES
}

enum From {
    SELLER
    BUYER
}
